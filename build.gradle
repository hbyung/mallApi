buildscript {

	ext {

		queryDslVersion = "5.0.0"

	}

}
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'

	//test 할때 해야되는 것 lombok
	testCompileOnly'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'

	//test 할때 해야되는 것 lombok
	testAnnotationProcessor'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//JSON 변환
	implementation 'com.google.code.gson:gson:2.10.1'

	//JWT TOKEN
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//tumbnailator
	implementation 'net.coobird:thumbnailator:0.4.19'


	annotationProcessor(


			"jakarta.persistence:jakarta.persistence-api",


			"jakarta.annotation:jakarta.annotation-api",


			"com.querydsl:querydsl-apt:${queryDslVersion}:jakarta")
}

tasks.named('test') {
	useJUnitPlatform()
}

compileJava.dependsOn('clean')
